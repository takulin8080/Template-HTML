/* ============================================================================================== */
/* component/icon
/* ============================================================================================== */
/*
---
name: icon
category: 2.component
tag:
- data属性
- mixin
---

`src/assets/icon/*.svg`から自動生成。

### data-icon

`data-icon`値に`*.svg`のファイル名を指定する。

```html
<i data-icon="facebook"></i>
```

### Mixin

`$char`には`*.svg`のファイル名を指定。`$insert`は設置場所の指定となるため`before（初期値）`か`after`を指定。

```scss
sample {
	@include icon($char, $insert);
}
```
*/
@font-face {
	font-family: 'icon';
	src: url('../font/icon.eot');
	src: url('../font/icon.eot?#iefix') format('eot'), url('../font/icon.woff') format('woff'), url('../font/icon.ttf') format('truetype'), url('../font/icon.svg#icon') format('svg');
}
@mixin icon-styles {
	font-family: 'icon';
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	// speak: none; // only necessary if not using the private unicode range (firstGlyph option)
	text-decoration: none;
	text-transform: none;
}
%icon {
	@include icon-styles;
}
@function icon-char($filename) {
	$char: '';
	@if $filename == facebook {
		$char: '\E001';
	}
	@if $filename == google-plus {
		$char: '\E002';
	}
	@if $filename == twitter {
		$char: '\E003';
	}
	@return $char;
}
@mixin icon($filename, $insert: before, $extend: true) {
	&:#{$insert} {
		@if $extend {
			@extend %icon;
		} @else {
			@include icon-styles;
		}
		content: icon-char($filename);
	}
}
[data-icon~="facebook"] {
	@include icon(facebook);
}
[data-icon~="google-plus"] {
	@include icon(google-plus);
}
[data-icon~="twitter"] {
	@include icon(twitter);
}

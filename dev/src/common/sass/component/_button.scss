/* ============================================================================================== */
/* module/button
/* ============================================================================================== */
/*
ボタンのスタイル`data-button`、ボタングループ`data-button-group`の管理
*/
/* require ======================================== */
@import 'component/icon';
/* style ======================================== */
[data-button] {
	cursor: pointer;
	border: 0;
	display: inline-flex;
	text-decoration: none;
	justify-content: center;
	align-items: center;
	/* default style ---------------------------------------- */
	border-radius: size(.5);
	box-shadow: boxShadow(2);
	background: linear-gradient(color(gray, 50), color(gray, 100));
	color: color(gray, 800);
	font-size: fontSize(-1);
	padding: size(1) size(2.5);
	&:hover {
		background: color(gray, 50);
		text-decoration: none;
	}
	&:active {
		background: color(gray, 100);
	}
	&:before {
		margin-right: size(1);
		font-size: size(1.5);
	}
	&:after {
		margin-left: size(1);
		font-size: size(1.5);
	}
	/* size ---------------------------------------- */
	&[data-button~='sm'] {
		font-size: fontSize(-3);
		padding: size(.75) size(1.5);
		&:before {
			margin-right: size(.75);
			font-size: size(1.2);
		}
		&:after {
			margin-left: size(.75);
			font-size: size(1.2);
		}
	}
	&[data-button~='md'] {
		font-size: fontSize(-1);
		padding: size(1) size(2.5);
		&:before {
			margin-right: size(1);
			font-size: size(1.5);
		}
		&:after {
			margin-left: size(1);
			font-size: size(1.5);
		}
	}
	&[data-button~='lg'] {
		font-size: fontSize(2);
		padding: size(1) size(3);
		&:before {
			margin-right: size(1);
			font-size: size(2);
		}
		&:after {
			margin-left: size(1);
			font-size: size(2);
		}
	}
	/* sign color ---------------------------------------- */
	@each $type, $color in map-get($colorPalet, sign) {
		&[data-button~='#{$type}'] {
			background: linear-gradient($color, darken($color, 4%));
			color: rgba(color(white), .9);
			&:hover {
				background: $color;
			}
			&:active {
				background: darken($color, 4%);
			}
		}
	}
	/* project color ---------------------------------------- */
	/* uniq ---------------------------------------- */
	&[data-button~='disabled'] {
		cursor: default;
		background: color(gray, 300);
		color: color(gray, 500);
		box-shadow: none;
	}
}
/* buttons ======================================== */
[data-button-group],
a[data-button] {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;
	&[data-button-group~="left"] {
		justify-content: flex-start;
		@include respondTo(xs) {
			justify-content: center;
		}
	}
	&[data-button-group~="center"] {
		justify-content: center;
		@include respondTo(xs) {
			justify-content: center;
		}
	}
	&[data-button-group~="right"] {
		justify-content: flex-end;
		@include respondTo(xs) {
			justify-content: center;
		}
	}
	@include respondTo(xs) {
		margin-right: 0;
		margin-left: 0;
	}
	[data-button] {
		margin: 0 size(.5) size(2);
		&[data-button~='sm'] {}
		&[data-button~='md'] {}
		&[data-button~='lg'] {
			@include respondTo(xs) {
				width: 100%;
				margin-right: 0;
				margin-left: 0;
			}
		}
	}
}